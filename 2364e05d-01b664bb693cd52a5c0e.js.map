{"version":3,"file":"2364e05d-01b664bb693cd52a5c0e.js","mappings":"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","sources":["webpack://gatsby-casper/./src/templates/author.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { getSrc } from 'gatsby-plugin-image';\r\n\r\nimport { Footer } from '../components/Footer';\r\nimport SiteNav from '../components/header/SiteNav';\r\nimport { PostCard } from '../components/PostCard';\r\nimport { Wrapper } from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport {\r\n  AuthorProfileImage,\r\n  inner,\r\n  outer,\r\n  PostFeed,\r\n  SiteHeader,\r\n  SiteHeaderContent,\r\n  SiteTitle,\r\n  SiteMain,\r\n  SiteArchiveHeader,\r\n  SiteNavMain,\r\n  ResponsiveHeaderBackground,\r\n  SiteHeaderBackground,\r\n} from '../styles/shared';\r\nimport { PageContext } from './post';\r\nimport { Helmet } from 'react-helmet';\r\nimport config from '../website-config';\r\n\r\ninterface AuthorTemplateProps {\r\n  location: Location;\r\n  data: {\r\n    logo: {\r\n      childImageSharp: {\r\n        fluid: any;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      totalCount: number;\r\n      edges: Array<{\r\n        node: PageContext;\r\n      }>;\r\n    };\r\n    authorYaml: {\r\n      name: string;\r\n      website?: string;\r\n      twitter?: string;\r\n      facebook?: string;\r\n      location?: string;\r\n      profile_image?: any;\r\n      bio?: string;\r\n      avatar: any;\r\n    };\r\n  };\r\n}\r\n\r\nconst Author = ({ data, location }: AuthorTemplateProps) => {\r\n  const author = data.authorYaml;\r\n\r\n  const edges = data.allMarkdownRemark.edges.filter(edge => {\r\n    const isDraft = edge.node.frontmatter.draft !== true || process.env.NODE_ENV === 'development';\r\n\r\n    let authorParticipated = false;\r\n    if (edge.node.frontmatter.author) {\r\n      edge.node.frontmatter.author.forEach(element => {\r\n        if (element.name === author.name) {\r\n          authorParticipated = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    return isDraft && authorParticipated;\r\n  });\r\n  const totalCount = edges.length;\r\n\r\n  return (\r\n    <IndexLayout>\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>\r\n          {author.name} - {config.title}\r\n        </title>\r\n        <meta name=\"description\" content={author.bio} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"profile\" />\r\n        <meta property=\"og:title\" content={`${author.name} - ${config.title}`} />\r\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content={`${author.name} - ${config.title}`} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:site\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:creator\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n      </Helmet>\r\n      <Wrapper>\r\n        <header className=\"site-archive-header\" css={[SiteHeader, SiteArchiveHeader]}>\r\n          <div css={[outer, SiteNavMain]}>\r\n            <div css={inner}>\r\n              <SiteNav isHome={false} />\r\n            </div>\r\n          </div>\r\n\r\n          <ResponsiveHeaderBackground\r\n            backgroundImage={getSrc(author.profile_image)}\r\n            css={[outer, SiteHeaderBackground]}\r\n            className=\"site-header-background\"\r\n          >\r\n            <div css={inner}>\r\n              <SiteHeaderContent css={AuthorHeader} className=\"site-header-content author-header\">\r\n                <img\r\n                  style={{ marginTop: '8px' }}\r\n                  css={[AuthorProfileImage, AuthorProfileBioImage]}\r\n                  src={getSrc(data.authorYaml.avatar)}\r\n                  alt={author.name}\r\n                />\r\n                <AuthHeaderContent className=\"author-header-content\">\r\n                  <SiteTitle className=\"site-title\">{author.name}</SiteTitle>\r\n                  {author.bio && <AuthorBio className=\"author-bio\">{author.bio}</AuthorBio>}\r\n                  <div css={AuthorMeta} className=\"author-meta\">\r\n                    {author.location && (\r\n                      <div className=\"author-location\" css={[HiddenMobile]}>\r\n                        {author.location}\r\n                      </div>\r\n                    )}\r\n                    <div className=\"author-stats\" css={[HiddenMobile]}>\r\n                      {totalCount > 1 && `${totalCount} posts`}\r\n                      {totalCount === 1 && '1 post'}\r\n                      {totalCount === 0 && 'No posts'}\r\n                    </div>\r\n                    {author.website && (\r\n                      <AuthorSocialLink className=\"author-social-link\">\r\n                        <AuthorSocialLinkAnchor\r\n                          href={author.website}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          Website\r\n                        </AuthorSocialLinkAnchor>\r\n                      </AuthorSocialLink>\r\n                    )}\r\n                    {author.twitter && (\r\n                      <AuthorSocialLink className=\"author-social-link\">\r\n                        <AuthorSocialLinkAnchor\r\n                          href={`https://twitter.com/${author.twitter}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          Twitter\r\n                        </AuthorSocialLinkAnchor>\r\n                      </AuthorSocialLink>\r\n                    )}\r\n                    {author.facebook && (\r\n                      <AuthorSocialLink className=\"author-social-link\">\r\n                        <AuthorSocialLinkAnchor\r\n                          href={`https://www.facebook.com/${author.facebook}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          Facebook\r\n                        </AuthorSocialLinkAnchor>\r\n                      </AuthorSocialLink>\r\n                    )}\r\n                  </div>\r\n                </AuthHeaderContent>\r\n              </SiteHeaderContent>\r\n            </div>\r\n          </ResponsiveHeaderBackground>\r\n        </header>\r\n        <main id=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={inner}>\r\n            <div css={[PostFeed]}>\r\n              {edges.map(({ node }) => <PostCard key={node.fields.slug} post={node} />)}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query ($author: String) {\r\n    authorYaml(name: { eq: $author }) {\r\n      name\r\n      website\r\n      twitter\r\n      bio\r\n      location\r\n      profile_image {\r\n        childImageSharp {\r\n          gatsbyImageData(layout: FULL_WIDTH)\r\n        }\r\n      }\r\n      avatar {\r\n        childImageSharp {\r\n          gatsbyImageData(quality: 100, breakpoints: [40, 80, 120], layout: FULL_WIDTH)\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { frontmatter: { draft: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: 2000\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            excerpt\r\n            tags\r\n            date\r\n            draft\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(layout: FULL_WIDTH)\r\n              }\r\n            }\r\n            author {\r\n              name\r\n              bio\r\n              avatar {\r\n                childImageSharp {\r\n                  gatsbyImageData(layout: FULL_WIDTH)\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            readingTime {\r\n              text\r\n            }\r\n            layout\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HiddenMobile = css`\r\n  @media (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst AuthorHeader = css`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 10vw 0 10px;\r\n  align-items: center;\r\n\r\n  @media (max-width: 500px) {\r\n    padding: 10px 0 0;\r\n\r\n    /* no image */\r\n    padding-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst AuthorMeta = css`\r\n  z-index: 10;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 0 0 1px;\r\n  font-size: 1.2rem;\r\n  font-weight: 400;\r\n  letter-spacing: 0.2px;\r\n  text-transform: uppercase;\r\n  white-space: nowrap;\r\n\r\n  .author-location + .author-stats:before,\r\n  .author-stats + .author-social-link:before,\r\n  .author-social-link + .author-social-link:before {\r\n    content: '•';\r\n    display: inline-block;\r\n    margin: 0 12px;\r\n    color: #fff;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    .author-location,\r\n    .author-stats,\r\n    .author-stats + .author-social-link:first-of-type:before {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AuthorSocialLink = styled.span`\r\n  display: inline-block;\r\n  margin: 0;\r\n  padding: 6px 0;\r\n`;\r\n\r\nconst AuthorBio = styled.h2`\r\n  z-index: 10;\r\n  flex-shrink: 0;\r\n  margin: 6px 0 0;\r\n  max-width: 46em;\r\n  font-size: 2rem;\r\n  line-height: 1.3em;\r\n  font-weight: 400;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst AuthHeaderContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 5px 0 0 30px;\r\n  @media (max-width: 500px) {\r\n    align-items: center;\r\n    margin: 16px 0 0 0;\r\n  }\r\n`;\r\n\r\n// .site-header-content .author-profile-image\r\nconst AuthorProfileBioImage = css`\r\n  z-index: 10;\r\n  flex-shrink: 0;\r\n  margin: -4px 0 0;\r\n  width: 110px;\r\n  height: 110px;\r\n  box-shadow: rgba(255, 255, 255, 0.1) 0 0 0 6px;\r\n  border-radius: 100%;\r\n`;\r\n\r\nconst AuthorSocialLinkAnchor = styled.a`\r\n  color: #fff;\r\n  font-weight: 600;\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport default Author;\r\n"],"names":["HiddenMobile","AuthorHeader","AuthorMeta","AuthorSocialLink","AuthorBio","AuthHeaderContent","AuthorProfileBioImage","AuthorSocialLinkAnchor","data","location","author","authorYaml","edges","allMarkdownRemark","filter","edge","isDraft","node","frontmatter","draft","process","authorParticipated","forEach","element","name","totalCount","length","lang","config","content","bio","property","pathname","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","isHome","backgroundImage","getSrc","profile_image","SiteHeaderBackground","style","marginTop","AuthorProfileImage","src","avatar","alt","website","href","target","rel","twitter","facebook","id","SiteMain","PostFeed","map","key","fields","slug","post"],"sourceRoot":""}